name: Destroy Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to destroy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - production
      confirm_destroy:
        description: 'Type "DESTROY" to confirm deletion'
        required: true
        type: string

env:
  AWS_REGION: ap-southeast-2

jobs:
  validate:
    name: Validate Destroy Request
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate Confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
          echo "❌ Confirmation failed. You must type 'DESTROY' to proceed."
          exit 1
        fi
        echo "✅ Destroy confirmation validated for ${{ github.event.inputs.environment }} environment"

  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    environment: ${{ github.event.inputs.environment }}-destroy
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        cp environments/${{ github.event.inputs.environment }}/backend.tf .
        terraform init

    - name: Terraform Plan Destroy
      run: |
        terraform plan -destroy -var-file="environments/${{ github.event.inputs.environment }}/terraform.tfvars"

    - name: Terraform Destroy
      run: |
        # Remove problematic capacity provider from state if it exists
        terraform state rm aws_ecs_cluster_capacity_providers.main 2>/dev/null || echo "Capacity provider not in state"
        
        terraform destroy -auto-approve -var-file="environments/${{ github.event.inputs.environment }}/terraform.tfvars"

    - name: Cleanup Confirmation
      run: |
        echo "🗑️ Environment '${{ github.event.inputs.environment }}' has been destroyed!"
        echo "📊 Resources removed:"
        echo "  - VPC and networking"
        echo "  - ECS cluster and services"
        echo "  - Aurora database cluster"
        echo "  - Load balancer"
        echo "  - Security groups"
        echo "  - Secrets Manager entries"
